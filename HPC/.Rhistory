pwd
getwd()
source('abc123_HPC_2023_main.R')
View(sum_vect)
source("~/Desktop/CMEECourseWork/HPC/abc123_HPC_2023_main.R")
source("~/Desktop/CMEECourseWork/HPC/abc123_HPC_2023_main.R")
source("~/Desktop/CMEECourseWork/HPC/abc123_HPC_2022_neutral_cluster.R")
dev.off()
png(filename="question_16_max.png", width = 600, height = 400)
# plot your graph here
barplot(max_mean, names.arg = max_x, xlab = "Number of individuals per species",
ylab = "Mean of species", main = "Octaves of species abundance distribution(max)")
source("~/Desktop/CMEECourseWork/HPC/abc123_HPC_2023_main.R")
getwd()
getwd()
install.packages(barplot)
setwd("/Users/guohongyuan/Desktop/CMEECourseWork/HPC")
getwd()
source("abc123_HPC_2023_main.R")
source("abc123_HPC_2023_main.R")
source("abc123_HPC_2023_main.R")
source("abc123_HPC_2023_main.R")
# Question 3
init_community_min <- function(size){
ini_com_min <- rep(1, size)
return(ini_com_min)
}
question_16 <- function() {
for (i in 1:200){
min <- neutral_generation_speciation(init_community_min(100),speciation_rate = 0.1)
max <- neutral_generation_speciation(init_community_max(100),speciation_rate = 0.1)
}
octave_min <- octaves(species_abundance(min)) #get octaves after first 200 generations
octave_max <- octaves(species_abundance(max))
for (i in 1:2000){
min <- neutral_generation_speciation(min, speciation_rate = 0.1)
max <- neutral_generation_speciation(max, speciation_rate = 0.1)
if (i %% 20 == 0){
octave_min <- sum_vect(octaves(species_abundance(min)), octave_min)
octave_max <- sum_vect(octaves(species_abundance(max)), octave_max)
}
}
num_loop <- 2000/20 + 1
min_mean <- octave_min / num_loop #create mean of octaves
max_mean <- octave_max / num_loop
# create bin name (x axis)
min_x <- list()
min_index <- seq(length(min_mean))
for (i in min_index) {
min_x <- append(min_x, paste0("(", 2^(i - 1), "-", (2^i) - 1, ")"))
}
max_x <- list()
max_index <- seq(length(max_mean))
for (i in max_index) {
max_x <- append(max_x, paste0("(", 2^(i - 1), "-", (2^i) - 1, ")"))
}
png(filename="question_16_min.png", width = 600, height = 400)
# plot your graph here
barplot(min_mean, names.arg = min_x, xlab = "Number of individuals per species",
ylab = "Mean of species", main = "Octaves of species abundance distribution(min)")
Sys.sleep(0.1)
dev.off()
png(filename="question_16_max.png", width = 600, height = 400)
# plot your graph here
barplot(max_mean, names.arg = max_x, xlab = "Number of individuals per species",
ylab = "Mean of species", main = "Octaves of species abundance distribution(max)")
Sys.sleep(0.1)
dev.off()
return("The initial condition of the system does not matter. Regardless of the initial state of richness, both communities with same speciation rate will reach the same dynamic equilibrium. Because speciation rate and extinction rate are same, both communities has the same patterns")
}
barplot(min_mean, names.arg = min_x, xlab = "Number of individuals per species",
ylab = "Mean of species", main = "Octaves of species abundance distribution(min)")
getwd()
tryCatch({
png(filename="test.png", width = 600, height = 400)
plot(1:10)
dev.off()
}, error = function(e) {
print(e)
})
getwd()
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2023_main.R")
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2022_demographic_cluster.R")
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2022_demographic_cluster.R")
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2022_neutral_cluster.R")
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2022_neutral_cluster.R")
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2023_main.R")
View(stochastic_step)
View(species_richness)
source('hg2423_HPC_2023_main.R')
source("~/Desktop/CMEECourseWork/HPC/hg2423_HPC_2023_main.R")
View(trinomial)
View(survival_maturation)
View(sum_vect)
View(stochastic_step)
View(stochastic_step)
View(stochastic_simulation_mean_calculation)
View(stochastic_recruitment)
View(state_initialise_spread)
View(state_initialise_adult)
View(state_initialise_adult)
View(species_richness)
View(species_abundance)
View(simulation_coalesence)
question_12 <- function() {
time_series_min <- neutral_time_series_speciation(community = init_community_min(100), duration = 200, speciation_rate = 0.1)
time_series_max <- neutral_time_series_speciation(community = init_community_max(100), duration = 200, speciation_rate = 0.1)
png(filename="question_12.png", width = 600, height = 400)
# plot your graph here
par(mfrow = c(1,1))
plot(1:length(time_series_min), time_series_min, type = "l", col = 2, xlab = "Time of generations", ylab = "species richness", main = "Neutral model with speciation")
lines(1:length(time_series_max), time_series_max, col = 3)
legend("topright", c("Minimum richness", "Maximum richness"), fill = 2: 3, col = 2: 3, lwd = 2, bty = "n")
plot
q
q()
q
q''
q()
